# AAS-connect basis schema = meta and user data schema w/o submodel schema

interface Datamodel{
	dataId: ID! @id
}

interface Metamodel{
	metaId: ID! @id
}

"""
Please reference to submodels as required here, e.g. contactInformations: [ContactInformations!]! @relationship(type: "submodel" direction: OUT)
"""
type AssetAdministrationShell implements Datamodel{
	idShort: String
	version: String
	revision: String
	aasId: String
	displayName: String
	description_en: String
	checksum: String
	assetInformation: [AssetInformation!]! @relationship(
	type: "assetInformation"
	direction: OUT
)
	dataId: ID! @id
}

type AssetInformation implements Datamodel{
	dataId: ID! @id
	assetKind: AssetKind
	globalAssetId: String!
	specificAssetId: [SpecificAssetId!]! @relationship(
	type: "specificAssetId"
	direction: OUT
)
}

enum AssetKind{
	Type
	Instance
}

type SpecificAssetId implements Datamodel{
	dataId: ID! @id
	name: String
	value: String
}

"""
Not part of the AAS specification, AAS-connect specific
"""
type Counter{
	fromDataId: String!
	toDataId: String!
	counter: String
}

type Submodel implements Metamodel{
	metaId: ID! @id
	idShort: String
	semanticId: String
	submodelId: String
	version: String
	revision: String
	description_en: String
	submodelElementCollection: [SubmodelElementCollection!]! @relationship(
	type: "submodelElementCollection"
	direction: OUT
)
}

type SubmodelElementCollection implements Metamodel{
	metaId: ID! @id
	idShort: String
	version: String
	revision: String
	description_en: String
	semanticId: String
	isCaseOf: String
	property: [Property!]! @relationship(
	type: "property"
	direction: OUT
)
	multiLanguageProperty: [MultiLanguageProperty!]! @relationship(
	type: "multiLanguageProperty"
	direction: OUT
)
	submodelElementCollection: [SubmodelElementCollection!]! @relationship(
	type: "subModelElementCollection"
	direction: OUT
)
}

type Property implements Metamodel{
	metaId: ID! @id
	idShort: String
	version: String
	revision: String
	semanticId: String
	description_en: String
	isCaseOf: String
	valueType: String
}

type MultiLanguageProperty implements Metamodel{
	metaId: ID! @id
	idShort: String
	version: String
	revision: String
	semanticId: String
	description_en: String
	isCaseOf: String
}

enum Card{
	ZeroToOne
	ZeroToMany
	OneToOne
	OneToMany
	ManyToOne
	ManyToMany
}

"""
Not part of the AAS specification, AAS-connect specific
"""
type Cardinality{
	id: ID! @id
	fromIdShort: String
	toIdShort: String
	card: Card
}
